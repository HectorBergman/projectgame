from random import randint
from imagescode2 import imagesbattle
import time
mapicon = {"rm1":"you", "rm2":"evt", "rm3": "   ", "rm4": "btl", "rm5": "   ","rm6": "   ","rm7": "   ","rm8": "   ","rm9": "   ","rm10": "   ","rm11": "   ","rm12": "   ","rm13": "   "}
gamestate = {"your_turn":1,"battle":1,"php":100,"pdmg":10,"display":"fish","ehp":100,"edmg":10,"ename":"Enemy","eHlike":3,"eHlim":3,"victory":0,"mass":0,"cigarettes":0,"toothbrush":0,"inventoryopen":0, "mapcheck":0}
action = ["hit", "check"]
actionwalk = ["walk", "walk left", "walk forward", "walk right", "walk back", "left", "forward", "right", "back", "check", "look","map", "inventory", "inv", "help"]
locations = ["forest"]
floor = {2:"cell"}
inventory = {}
coordinate={"xcoord":0,"ycoord":0}
#Gamestate keeps track of who's turn it is, the player and the enemy's HP, dmg, etc.
#Images is a gallery of all images which will be displayed
#Action is a list of all available actions, and can/will be updated whenever necessary, either adding or removing an action
def roomcheck(mass, room):
    if room + mass == 2:
        if gamestate["toothbrush"] == 0:
            img("toothbrush")
            print("This is your new bathroom...")
            time.sleep(1)
            print("Take a toothbrush? y/n")
            while gamestate["toothbrush"] == 0:
                s = input().lower()
                if s == "y":
                    img("toothbrushstolen")
                    print("Added toothbrush to inventory. Open inventory by typing 'inventory' or 'inv'")
                    gamestate["toothbrush"] = 1
                    inventory["toothbrush"] = "unequipped"
                    inventory["testitem"] = "unequipped"
                elif s == "n":
                    print("You let the toothbrush be.")
                    gamestate["toothbrush"] = 1
                else:
                    print("Type y or n...")

            
def bag():
    gamestate["inventoryopen"] = 0
    for x in inventory:
        if inventory[x] == "equipped":
            print(f"{x.capitalize()} EQUIPPED")
        else:
            print(x.capitalize())
    if len(inventory) == 0:
        print("You have no items...")
    if gamestate["cigarettes"] == 1:
        print(f"\nYou have 1 cigarette.")
    else:
        print(f"\nYou have {gamestate['cigarettes']} cigarettes.")
    print("Do you want to equip something else? y/n")
    while gamestate["inventoryopen"] == 0:
        s = input().lower()
        if s == "y":
            print("Which item do you want to equip? Type 'cancel' to cancel.")
            while gamestate["inventoryopen"] == 0:
                d = input().lower()
                if d == "cancel":
                    print("You close your inventory.")
                    gamestate["inventoryopen"] = 1
                elif d in inventory:
                    for x in inventory:
                        inventory[x] = "unequipped"
                    inventory[d] = "equipped"
                    print(f"You equipped the {d.capitalize()}.")
                    gamestate["inventoryopen"] = 1
                else:
                    print("That is not an item... Type 'cancel' to exit out of inventory.")
        elif s == "n":
            print("You close your inventory.")
            gamestate["inventoryopen"] = 1
        else:
            print("Type y or n...")     
        
    
        

def img(pic):
    print(imagesbattle[pic])
def introsequence():
    print("\n\nI hereby sentence you to life in prison without the possibility of parole!")
    img("gavel")
    time.sleep(4)
    print("...")
    time.sleep(2)
    img("behindbars")
    print("Life sentence... I'm way too young!")
    time.sleep(2)
    print("I have to get out of here, no way I'm wasting away in here!")
    time.sleep(2)
    print("\nMove around by typing 'left', 'right', 'forward', or 'back'")
    time.sleep(1)
    print("Type 'map' to see your current location and 'help' to get a list of all available commands.")
    walk(0,0,-1,0,0,1,1,2)
def prisonercutscene():
    img("prisoner")
    print("Psst... new kid...")
    time.sleep(3)
    print("You wanna break out of here, right?")
    time.sleep(3)
    print("Well I can help you with that...")
    time.sleep(3)
    img("mchappy")
    print("Wait, really?")
    time.sleep(2)
    img("prisoner")
    print("Sure, but it'll cost ya...")
    time.sleep(3)
    img("mcsuspicious")
    print("How much...")
    time.sleep(2.5)
    img("prisoner")
    if gamestate["cigarettes"] == 0:
        print (f"Give me a cigarette and I'll help you")
    else:
        print(f"Give me {gamestate['cigarettes']+1} cigarettes and I'll help you")
    time.sleep(2)
    print("...")
    time.sleep(1)
    print(f"You have {gamestate['cigarettes']}...")
    time.sleep(1)
    img("mcneutral")
    print("I don't have them man, sorry.")
    time.sleep(2)
    img("prisoner")
    print("Quit lying man I know you've got it")
    time.sleep(2)
    print("...")
    time.sleep(2)
    print("Fine, I guess I'll have to take them from you!")
    print("")
    time.sleep(0.5)
    print("")
    time.sleep(1)
    print("You're about to enter your first battle...")
    time.sleep(1)
    print("Currently you have no weapons, but that's okay! You can still use 'hit' and 'kick'")
    time.sleep(2)
    print("You can also type 'check' to see your current HP and the opponent's HP... Good luck!")
    time.sleep(3)
def prisonercutscene2():
    time.sleep(1)
    img("mcsurprise")
    print("Oh... I knocked him unconcious...")
    time.sleep(2)
    img("keys")
    print("Huh... he really did have a way out of here...")
    time.sleep(2)
    print("And 10 cigarettes... why was he so desperate...")
    gamestate["cigarettes"] += 10
    time.sleep(2)
    img("mchappy")
    print("I'm one step closer from getting out of here!")
    time.sleep(2)
    
def overworld():
    print("placeholder")
def walk(startX, startY, minX, minY, maxX, maxY, currentroom, floor):
    coordinate["xcoord"] = startX
    coordinate["ycoord"] = startY
    mass = 0
    while True:
        wallcheck(minX, minY, maxX, maxY)
        s = input().lower()
        if s == "stop":
            return "hej"
        if s in actionwalk:
            if s == actionwalk[0]:
                print("Specify direction: left, right, forward, back...?")
            if s == actionwalk[1] or s == actionwalk[5]:
                print("You walk left...")
                mapicon[f"rm{currentroom + 1}"] = "you"
                mapicon[f"rm{currentroom}"] = "   "
                currentroom = currentroom + 1
                coordinate["xcoord"] = coordinate["xcoord"] - 1
            if s == actionwalk[2] or s == actionwalk[6]:
                print("You walk forward...")
                coordinate["ycoord"] = coordinate["ycoord"] + 1
                mapicon[f"rm{currentroom+floor}"] = "you"
                mapicon[f"rm{currentroom}"] = "   "
                currentroom = currentroom + floor
            if s == actionwalk[3] or s == actionwalk[7]:
                print("You walk right...")
                coordinate["xcoord"] = coordinate["xcoord"] + 1
                mapicon[f"rm{currentroom - 1}"] = "you"
                mapicon[f"rm{currentroom}"] = "   "
                currentroom = currentroom - 1
            if s == actionwalk[4] or s == actionwalk[8]:
                print("You take a step back...")
                coordinate["ycoord"] = coordinate["ycoord"] - 1
                mapicon[f"rm{currentroom - floor}"] = "you"
                mapicon[f"rm{currentroom}"] = "   "
                currentroom = currentroom - floor
            if s == actionwalk[9] or s == actionwalk[10]:
                print(f"You look around...")
            if s == actionwalk[11]:
                if gamestate["mapcheck"] == 0:
                    print("Here is your current map, 'you' is your position, 'btl' is a boss battle, and 'evt' is an optional event.")
                    print(render(floor))
                    gamestate["mapcheck"] = 1
                else:
                    print(render(floor))
            if s == actionwalk[12] or s == actionwalk[13]:
                bag()
            if s == actionwalk[-1]:
                print(actionwalk)
            else:
                pass #In case s is in actionwalk but not an action. Example: "hel"   
            #encounterchance = randint(0,7)
            #if encounterchance == 5:
                #battle("Medusa", 100, 10, "Medusa", 3, 2,"random")
                #print("random encounter shit")
            
        else:
            print("You can't do that...")
        roomcheck(mass, currentroom)
        if currentroom == ((floor * floor) + gamestate["mass"]): #This checks if you're in the top left corner of the map to initiate bossfight, but for now it only takes you to the next floor, mass is the number of floors present on the previous floor.
            if floor == 2:
                prisonercutscene()
                battle("Prisoner Westwood", 100, 10, 'prisoner', 3, 2, 1)
                if gamestate["victory"] == 1:
                    prisonercutscene2()
                    print(f"You're now on the next level of the game...")
                    render(3)
                    
                
                
                
            floor = floor + 1
            gamestate["mass"] = gamestate["mass"] + currentroom
            currentroom = currentroom + 1
            mapicon[f"rm{currentroom}"] = "you"
            walk(0,0,-floor+1,0,0,floor-1,currentroom,floor)
        
#Checks if the player is against a wall
def wallcheck(minX, minY, maxX, maxY): 
    if coordinate["xcoord"] == maxX: 
        actionwalk[3] = None
        actionwalk[7] = None
    if coordinate["xcoord"] != maxX:
        if "right" in actionwalk:
            pass
        else:
            actionwalk[3] = "walk right"
            actionwalk[7] = "right"
    if coordinate["xcoord"] == minX: 
        actionwalk[1] = None
        actionwalk[5] = None
    if coordinate["xcoord"] != minX:
        if "left" in actionwalk:
            pass
        else:
            actionwalk[1] = "walk left"
            actionwalk[5] = "left"
    if coordinate["ycoord"] == minY: 
        actionwalk[4] = None
        actionwalk[8] = None
    if coordinate["ycoord"] != minY:
        if "back" in actionwalk:
            pass
        else:
            actionwalk[4] = "walk back"
            actionwalk[8] = "back"
    if coordinate["ycoord"] == maxY: 
        actionwalk[2] = None
        actionwalk[6] = None
    if coordinate["ycoord"] != maxY:
        if "forward" in actionwalk:
            pass
        else:
            actionwalk[2] = "walk forward"
            actionwalk[6] = "forward"
            
menuoptions = ["start", "instructions", "help", "skipcutscene"]              
def mainmenu():
    print(imagesbattle["prison"])
    print(imagesbattle["menutext"])
    print("""Type one:
""")
    for x in menuoptions:
        if x != "help" and x != "skipcutscene":
            print(f"{x.capitalize()}")
    h = 1
    while h == 1:
        s = input().lower()
        if s in menuoptions:
            if s == menuoptions[0]:
                h = 0
                introsequence()
                
                #start and shit
            if s == menuoptions[1] or s == menuoptions[2]:
                instructions()
            if s == menuoptions[3]:
                walk(0,0,-1,0,0,1,1,2)
        else:
            print("You can't do that.")

def instructions():
    print("Here are the instructions:")
        
def battle(name, hp, dmg, image, eHlike, eHlim, yourturn):   
    gamestate["ehp"]= hp
    gamestate["edmg"] = dmg
    gamestate["display"] = image
    gamestate["your_turn"] = yourturn
    img(image)
    maxhp = hp
    print(f"{name} attacks!")
    while gamestate["battle"] == 1:
        while gamestate["your_turn"] == 1:  #Din tur
            if gamestate["ehp"] > 0 and gamestate["php"] > 0 :
                s = input().lower()
                if s == action[0]:
                    hit()
                elif s == action[1]:
                    check(image)
                else:
                    print(f"You can't do that.")
            elif gamestate["ehp"] <= 0:
                print(f"{name} died!")
                gamestate["victory"] = 1
                gamestate["battle"] = 0
                gamestate["your_turn"] = 2
            else:
                print("You died!")
                gamestate["victory"] = 0
                gamestate["battle"] = 0
                gamestate["your_turn"] = 2
        while gamestate["your_turn"] == 0:  #Motståndarens tur
            if gamestate["php"] > 0 and gamestate["ehp"] > 0:
                if name == "Prisoner Westwood":
                    move = randint(0,4)
                    if move == 0 or move == 1 or move == 2:
                        ehit(name, eHlike, eHlim)
                    if move == 4 or move == 3:
                        gamestate["ehp"] = esmoke(name, hp, maxhp)
                
            elif gamestate["ehp"] <= 0:
                print(f"{name} died!")
                gamestate["victory"] = 1
                gamestate["battle"] = 0
                gamestate["your_turn"] = 2
            else:
                print("You died!")
                gamestate["victory"] = 0
                gamestate["battle"] = 0
                gamestate["your_turn"] = 2
#Player actions below
def hpcheck():
    print ("You:", gamestate["php"], "hp")
    print (gamestate["display"], ":", gamestate["ehp"], "hp")
def check(image):
    img(image)
    hpcheck()
    if gamestate["display"] == "Medusa":
        print(f"Medusa turned you into stone!")
        gamestate["your_turn"] = 0
def hit():
    print(f"You hit")
    gamestate["ehp"] = gamestate["ehp"]- gamestate["pdmg"] * (randint(10,20) / randint(5,15))
    gamestate["your_turn"] = 0
#Enemy Actions Below:
def ehit(name, hitlikelihood, hitlimit): 
    hitattempt = randint(0,hitlikelihood)
    if hitattempt >= hitlimit:
        print(f"{name} missed!")
        gamestate["your_turn"] = 1
    else:
        gamestate["php"] = gamestate["php"] - (gamestate["edmg"] + randint(10,40))
        print(f"{name} swings!")
        gamestate["your_turn"] = 1
def esmoke(name, hp, maxhp):
    print(f"{name} lights a cigarette!")
    time.sleep(1)
    print(f"{name} heals 20 HP!")
    gamestate["your_turn"] = 1
    if maxhp >= hp + 20:
        return hp + 20
    else:
        return maxhp
    
        
        
def render(floor):
    if floor == 2:
        return f"""
 _______
|{mapicon["rm4"]}|{mapicon["rm3"]}|
|___|___|
|{mapicon["rm2"]}|{mapicon["rm1"]}|
|___|___|

"""
    if floor == 3:
        return f"""
 ___________
|{mapicon["rm13"]}|{mapicon["rm12"]}|{mapicon["rm11"]}|
|___|___|___|
|{mapicon["rm10"]}|{mapicon["rm9"]}|{mapicon["rm8"]}|
|___|___|___|
|{mapicon["rm7"]}|{mapicon["rm6"]}|{mapicon["rm5"]}|
|___|___|___|

"""
    else:
        return f"There is no map..."
        

#battle("Medusa", 100, 10, "Medusa", 3, 2)

mainmenu()

    

